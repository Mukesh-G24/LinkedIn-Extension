list = messages.get("list");
img = 0;
video = 0;
unfurled = 0;
text = 0;
info list;
for each  element in list
{
	if(element.containKey("file"))
	{
		file = element.get("file");
		type = file.getfiletype();
		if(type.contains("image"))
		{
			img = img + 1;
		}
		else if(type.contains("video"))
		{
			video = video + 1;
		}
	}
	else if(element.containKey("unfurled_details"))
	{
		unfurled = unfurled + 1;
	}
	else if(element.containKey("text"))
	{
		text = text + 1;
	}
}
info img + " " + video + " " + unfurled + " " + text;
if(img == 0 && video == 0 && unfurled == 0 && text == 0)
{
	return {"type":"banner","text":"You can't able share this file","status":"failure"};
}
if(img > 0 && (video > 0 || unfurled > 0 || text > 0))
{
	response = {"type":"banner","text":"You can't able to share this combination of files.","status":"failure"};
	return response;
}
else if(video > 0 && (img > 0 || unfurled > 0 || text > 0))
{
	response = {"type":"banner","text":"You can't able to share this combination of files.","status":"failure"};
	return response;
}
else if(unfurled > 0 && (img > 0 || video > 0 || text > 0))
{
	response = {"type":"banner","text":"You can't able to share this combination of files.","status":"failure"};
	return response;
}
else if(text > 0 && (img > 0 || video > 0 || unfurled > 0))
{
	response = {"type":"banner","text":"You can't able to share this combination of files.","status":"failure"};
	return response;
}
if(video > 0)
{
	if(video == 1)
	{
		file = message.get("file");
		size = file.getfilesize();
		if(size > 4194303 || size == null)
		{
			return {"text":"File size exceeds the maximum limit of 4MB.","type":"banner","status":"failure"};
		}
		orgdetails = invokeurl
		[
			url :"https://api.linkedin.com/v2/organizationAcls?q=roleAssignee"
			type :GET
			headers:{"X-Restli-Protocol-Version":"2.0.0"}
			connection:"linkedin"
		];
		org = orgdetails.get("elements");
		orglist = list();
		for each  e in org
		{
			orglist.add(e.getJSON("organization"));
		}
		info orglist;
		if(orglist.size() == 0)
		{
			return {"text":"You don't have any pages. Create a page","type":"banner","status":"failure"};
		}
		idlist = list();
		for each  id in orglist
		{
			o = id.toList(":").get(3);
			getinfo = invokeurl
			[
				url :"https://api.linkedin.com/rest/organizations/" + o
				type :GET
				headers:{"X-Restli-Protocol-Version":"2.0.0","LinkedIn-Version":"202304"}
				connection:"linkedin"
			];
			name = getinfo.get("vanityName");
			idlist.add({"label":name,"value":o});
		}
		info idlist;
		response = {"type":"form","title":"PAGE DETAILS","name":"pagedetail","button_label":"Submit","inputs":{{"label":"Select a page","name":"select","placeholder":"Select a page where would you like to share a post","multiple":false,"mandatory":true,"type":"select","options":idlist},{"name":"from","value":"video","type":"hidden"},{"name":"for","value":"share","type":"hidden"}},"action":{"type":"invoke.function","name":"OrgIdForLinkedin"}};
		return response;
	}
	else
	{
		response = {"type":"banner","text":"You can't able to share multiple videos","status":"failure"};
		return response;
	}
}
if(img > 0)
{
	if(img <= 9)
	{
		orgdetails = invokeurl
		[
			url :"https://api.linkedin.com/v2/organizationAcls?q=roleAssignee"
			type :GET
			headers:{"X-Restli-Protocol-Version":"2.0.0"}
			connection:"linkedin"
		];
		org = orgdetails.get("elements");
		orglist = list();
		for each  e in org
		{
			orglist.add(e.getJSON("organization"));
		}
		info orglist;
		if(orglist.size() == 0)
		{
			return {"text":"You don't have any pages. Create a page","type":"banner","status":"failure"};
		}
		idlist = list();
		for each  id in orglist
		{
			o = id.toList(":").get(3);
			getinfo = invokeurl
			[
				url :"https://api.linkedin.com/rest/organizations/" + o
				type :GET
				headers:{"X-Restli-Protocol-Version":"2.0.0","LinkedIn-Version":"202304"}
				connection:"linkedin"
			];
			name = getinfo.get("vanityName");
			idlist.add({"label":name,"value":o});
		}
		info idlist;
		response = {"type":"form","title":"PAGE DETAILS","name":"pagedetail","button_label":"Submit","inputs":{{"label":"Select a page","name":"select","placeholder":"Select a page where would you like to share a post","multiple":false,"mandatory":true,"type":"select","options":idlist},{"name":"from","value":"image","type":"hidden"},{"name":"for","value":"share","type":"hidden"}},"action":{"type":"invoke.function","name":"OrgIdForLinkedin"}};
		return response;
	}
	else
	{
		response = {"type":"banner","text":"You can't able to share more than 9 files.","status":"failure"};
		return response;
	}
}
if(unfurled > 0)
{
	if(unfurled == 1)
	{
		orgdetails = invokeurl
		[
			url :"https://api.linkedin.com/v2/organizationAcls?q=roleAssignee"
			type :GET
			headers:{"X-Restli-Protocol-Version":"2.0.0"}
			connection:"linkedin"
		];
		org = orgdetails.get("elements");
		orglist = list();
		for each  e in org
		{
			orglist.add(e.getJSON("organization"));
		}
		info orglist;
		if(orglist.size() == 0)
		{
			return {"text":"You don't have any pages. Create a page","type":"banner","status":"failure"};
		}
		idlist = list();
		for each  id in orglist
		{
			o = id.toList(":").get(3);
			getinfo = invokeurl
			[
				url :"https://api.linkedin.com/rest/organizations/" + o
				type :GET
				headers:{"X-Restli-Protocol-Version":"2.0.0","LinkedIn-Version":"202304"}
				connection:"linkedin"
			];
			name = getinfo.get("vanityName");
			idlist.add({"label":name,"value":o});
		}
		info idlist;
		response = {"type":"form","title":"PAGE DETAILS","name":"pagedetail","button_label":"Submit","inputs":{{"label":"Select a page","name":"select","placeholder":"Select a page where would you like to share a post","multiple":false,"mandatory":true,"type":"select","options":idlist},{"name":"from","value":"link","type":"hidden"},{"name":"for","value":"share","type":"hidden"}},"action":{"type":"invoke.function","name":"OrgIdForLinkedin"}};
		return response;
	}
	else
	{
		response = {"type":"banner","text":"You can't able to share multiple files.","status":"failure"};
		return response;
	}
}
if(text > 0)
{
	if(text == 1)
	{
		orgdetails = invokeurl
		[
			url :"https://api.linkedin.com/v2/organizationAcls?q=roleAssignee"
			type :GET
			headers:{"X-Restli-Protocol-Version":"2.0.0"}
			connection:"linkedin"
		];
		org = orgdetails.get("elements");
		orglist = list();
		for each  e in org
		{
			orglist.add(e.getJSON("organization"));
		}
		info orglist;
		if(orglist.size() == 0)
		{
			return {"text":"You don't have any pages. Create a page","type":"banner","status":"failure"};
		}
		idlist = list();
		for each  id in orglist
		{
			o = id.toList(":").get(3);
			getinfo = invokeurl
			[
				url :"https://api.linkedin.com/rest/organizations/" + o
				type :GET
				headers:{"X-Restli-Protocol-Version":"2.0.0","LinkedIn-Version":"202304"}
				connection:"linkedin"
			];
			name = getinfo.get("vanityName");
			idlist.add({"label":name,"value":o});
		}
		info idlist;
		response = {"type":"form","title":"PAGE DETAILS","name":"pagedetail","button_label":"Submit","inputs":{{"label":"Select a page","name":"select","placeholder":"Select a page where would you like to share a post","multiple":false,"mandatory":true,"type":"select","options":idlist},{"name":"from","value":"text","type":"hidden"},{"name":"for","value":"share","type":"hidden"}},"action":{"type":"invoke.function","name":"OrgIdForLinkedin"}};
		return response;
	}
	else
	{
		response = {"type":"banner","text":"You can't able to share multiple files.","status":"failure"};
		return response;
	}
}
return Map();